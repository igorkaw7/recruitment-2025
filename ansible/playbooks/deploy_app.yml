---
- name: Deploy Weather App
  hosts: weatherapp
  become: yes
  vars:
    app_dir: /opt/weatherapp
    default_file_mode: '0644'
  
  tasks:
    - name: Create backend directory
      file:
        path: "{{ app_dir }}/backend"
        state: directory
        mode: '0755'
        
    - name: Create frontend directory
      file:
        path: "{{ app_dir }}/frontend"
        state: directory
        mode: '0755'

    - name: Create nginx directory
      file:
        path: "{{ app_dir }}/nginx"
        state: directory
        mode: '0755'
    
    - name: Copy nginx config
      copy:
        src: "../../nginx/nginx.conf"
        dest: "{{ app_dir }}/nginx/nginx.conf"
        mode: "{{ default_file_mode }}"
    
    - name: Set ec2-user ownership for directories
      file:
        path: "{{ app_dir }}/{{ item }}"
        state: directory
        owner: ec2-user
        group: ec2-user
        recurse: yes
      with_items:
        - backend
        - frontend

    - name: Copy Docker Compose files
      copy:
        src: "{{ playbook_dir }}/../../{{ item }}"
        dest: "{{ app_dir }}/{{ item }}"
        mode: '0644'
      with_items:
        - docker-compose.prod.yml
        
    - name: Copy backend files
      synchronize:
        src: ../../backend/
        dest: "{{ app_dir }}/backend/"
        rsync_opts:
          - "--exclude=node_modules"
          - "--exclude=node_modules/**"
      delegate_to: localhost
      become: no
        
    - name: Copy frontend files
      synchronize:
        src: ../../frontend/
        dest: "{{ app_dir }}/frontend/"
        rsync_opts:
          - "--exclude=node_modules"
          - "--exclude=node_modules/**"
          - "--exclude=dist"
          - "--exclude=build"
      delegate_to: localhost
      become: no

    - name: Copy backend .env.local
      copy:
        src: "../../{{ item }}"
        dest: "{{ app_dir }}/{{ item }}"
        mode: '0600'
      with_items:
        - backend/.env.local

    - name: Debug - Verify Dockerfiles exist
      shell: "find {{ app_dir }} -name 'Dockerfile' | sort"
      register: dockerfile_check
      
    - name: Show Dockerfile locations
      debug:
        var: dockerfile_check.stdout_lines

    - name: Deploy with Docker Compose
      community.docker.docker_compose_v2:
        project_src: "{{ app_dir }}"
        files:
          - docker-compose.prod.yml
        build: always
        state: present
      register: deploy_result
      retries: 3
      delay: 10
      until: deploy_result is succeeded
